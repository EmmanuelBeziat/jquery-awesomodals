{"version":3,"sources":["jquery.awesomodals.js"],"names":["$","window","document","undefined","Plugin","element","options","this","_name","pluginName","_defaults","fn","defaults","extend","init","prototype","buildCache","bindEvents","debug","destroy","unbindEvents","$element","removeData","$modal","plugin","on","selectorOpen","event","modalOpen","call","selectorClose","modalClose","itemOverlay","optionOverlayActive","off","attr","preventDefault","addClass","classActive","callbackOpen","removeClass","callbackClose","onModalOpened","onModalClosed","instruction","type","console","warn","info","error","log","each","data","selectorModal","jQuery"],"mappings":";;;;;;CAQC,SAAUA,EAAGC,EAAQC,EAAUC,GAC/B,YAOA,SAASC,GAAOC,EAASC,GACxBC,KAAKF,QAAUA,EACfE,KAAKC,MAAQC,EACbF,KAAKG,UAAYV,EAAEW,GAAGF,GAAYG,SAClCL,KAAKD,QAAUN,EAAEa,UAAYN,KAAKG,UAAWJ,GAE7CC,KAAKO,OAXN,GAAIL,GAAa,aAiBjBT,GAAEa,OAAOT,EAAOW,WAGfD,KAAM,WACLP,KAAKS,aACLT,KAAKU,aAELV,KAAKW,MAAM,UAAYX,KAAKC,MAAO,SAOpCW,QAAS,WACRZ,KAAKa,eACLb,KAAKc,SAASC,cAOfN,WAAY,WACXT,KAAKc,SAAWrB,EAAEO,KAAKF,SACvBE,KAAKgB,OAAS,MAMfN,WAAY,WACX,GAAIO,GAASjB,IAEbiB,GAAOH,SACLI,GAAG,SAAgBD,EAAOhB,MAAOgB,EAAOlB,QAAQoB,aAAc,SAASC,GACvEH,EAAOI,UAAUC,KAAKL,EAAQxB,EAAEO,MAAOoB,KAEvCF,GAAG,SAAgBD,EAAOhB,MAAOgB,EAAOlB,QAAQwB,cAAe,SAASH,GACxEH,EAAOO,WAAWF,KAAKL,EAAQxB,EAAEO,MAAOoB,KAExCF,GAAG,SAAgBD,EAAOhB,MAAOgB,EAAOlB,QAAQ0B,YAAa,SAASL,GAClEH,EAAOlB,QAAQ2B,qBAClBT,EAAOO,WAAWF,KAAKL,EAAQxB,EAAEO,MAAOoB,MAQ5CP,aAAc,WACbb,KAAKc,SAASa,IAAI,IAAM3B,KAAKC,QAO9BoB,UAAW,SAASP,EAAUM,GAC7BpB,KAAKW,MAAM,4BACXX,KAAKW,MAAM,aAAeG,EAASc,KAAK,eAGxCR,EAAMS,gBAEN,IAAIb,GAASvB,EAAEqB,EAASc,KAAK,cAE7BZ,GAAOc,SAAS9B,KAAKD,QAAQgC,aAC7B/B,KAAKgB,OAASA,EAKdhB,KAAKgC,gBAONR,WAAY,SAASJ,GACpBpB,KAAKW,MAAM,6BACXX,KAAKgB,OAAOiB,YAAYjC,KAAKD,QAAQgC,aACrC/B,KAAKgB,OAAS,KAKdhB,KAAKkC,iBAmBNF,aAAc,WAEb,GAAIG,GAAgBnC,KAAKD,QAAQoC,aAEjCnC,MAAKW,MAAM,8BAEkB,kBAAlBwB,IACVA,EAAcb,KAAKtB,KAAKF,UAO1BoC,cAAe,WAEd,GAAIE,GAAgBpC,KAAKD,QAAQqC,aAEjCpC,MAAKW,MAAM,8BAGkB,kBAAlByB,IACVA,EAAcd,KAAKtB,KAAKF,UAI1Ba,MAAO,SAAS0B,EAAaC,GAC5B,GAAItC,KAAKD,QAAQY,MAChB,OAAQ2B,GACP,IAAK,OAAQC,QAAQC,KAAKH,EAAc,MACxC,KAAK,OAAQE,QAAQE,KAAKJ,EAAc,MACxC,KAAK,QAASE,QAAQG,MAAML,EAAc,MAC1C,SAASE,QAAQI,IAAIN,OAUzB5C,EAAEW,GAAGF,GAAc,SAASH,GAM3B,MALAC,MAAK4C,KAAK,WACJnD,EAAEoD,KAAM7C,KAAM,UAAYE,IAC9BT,EAAEoD,KAAM7C,KAAM,UAAYE,EAAY,GAAIL,GAAQG,KAAMD,MAGnDC,MAMRP,EAAEW,GAAGF,GAAYG,UAChBM,OAAO,EACPQ,aAAc,oBACdI,cAAe,qBACfuB,cAAe,oBACfrB,YAAa,kBACbM,YAAa,iBACbL,qBAAqB,EACrBS,cAAe,KACfC,cAAe,OAGbW,OAAQrD,OAAQC","file":"jquery-awesomodals.min.js","sourcesContent":["/*!\r\n * Simple collapse/spoilers system\r\n * Version : 1.0\r\n * Emmanuel B. (www.emmanuelbeziat.com)\r\n * https://github.com/EmmanuelBeziat/jquery-spoilers\r\n **/\r\n\r\n\r\n;(function($, window, document, undefined) {\r\n\t'use strict';\r\n\r\n\tvar pluginName = 'awesomodals';\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\t\tthis._name = pluginName;\r\n\t\tthis._defaults = $.fn[pluginName].defaults;\r\n\t\tthis.options = $.extend( {}, this._defaults, options );\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * Methods\r\n\t */\r\n\t$.extend(Plugin.prototype, {\r\n\r\n\t\t// Initialization logic\r\n\t\tinit: function() {\r\n\t\t\tthis.buildCache();\r\n\t\t\tthis.bindEvents();\r\n\r\n\t\t\tthis.debug('[init] ' + this._name, 'info');\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove plugin instance\r\n\t\t * Example: $('selector').data('tabs').destroy();\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.unbindEvents();\r\n\t\t\tthis.$element.removeData();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Create variables that can be accessed by other functions\r\n\t\t * Useful for DOM performances\r\n\t\t */\r\n\t\tbuildCache: function() {\r\n\t\t\tthis.$element = $(this.element);\r\n\t\t\tthis.$modal = null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Attach actions to events\r\n\t\t */\r\n\t\tbindEvents: function() {\r\n\t\t\tvar plugin = this;\r\n\r\n\t\t\tplugin.$element\r\n\t\t\t\t.on('click' + '.' + plugin._name, plugin.options.selectorOpen, function(event) {\r\n\t\t\t\t\tplugin.modalOpen.call(plugin, $(this), event);\r\n\t\t\t\t})\r\n\t\t\t\t.on('click' + '.' + plugin._name, plugin.options.selectorClose, function(event) {\r\n\t\t\t\t\tplugin.modalClose.call(plugin, $(this), event);\r\n\t\t\t\t})\r\n\t\t\t\t.on('click' + '.' + plugin._name, plugin.options.itemOverlay, function(event) {\r\n\t\t\t\t\tif (plugin.options.optionOverlayActive) {\r\n\t\t\t\t\t\tplugin.modalClose.call(plugin, $(this), event);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove actions from events\r\n\t\t */\r\n\t\tunbindEvents: function() {\r\n\t\t\tthis.$element.off('.' + this._name);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Open modal method\r\n\t\t * Call callback on complete\r\n\t\t */\r\n\t\tmodalOpen: function($element, event) {\r\n\t\t\tthis.debug('[action] Open modal call');\r\n\t\t\tthis.debug('Modal ID: ' + $element.attr('data-modal'));\r\n\r\n\t\t\t// If button is a link, prevent following it\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tvar $modal = $($element.attr('data-modal'));\r\n\r\n\t\t\t$modal.addClass(this.options.classActive);\r\n\t\t\tthis.$modal = $modal;\r\n\r\n\t\t\t/**\r\n\t\t\t * Allow callback after open\r\n\t\t\t */\r\n\t\t\tthis.callbackOpen();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Close modal method\r\n\t\t * Call callback on complete\r\n\t\t */\r\n\t\tmodalClose: function(event) {\r\n\t\t\tthis.debug('[action] Close modal call');\r\n\t\t\tthis.$modal.removeClass(this.options.classActive);\r\n\t\t\tthis.$modal = null;\r\n\r\n\t\t\t/**\r\n\t\t\t * Allow callback after close\r\n\t\t\t */\r\n\t\t\tthis.callbackClose();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Ger the action on overlay click\r\n\t\t *//* TODO\r\n\t\toverlayAction: function(plugin, $this) {\r\n\t\t\tthis.debug('[action] Overlay method call');\r\n\r\n\t\t\tconsole.log(this.options.optionOverlayActive);\r\n\r\n\t\t\tif (this.options.optionOverlayActive) {\r\n\t\t\t\tplugin.modalClose.call(plugin, $this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When opening modal is complete\r\n\t\t */\r\n\t\tcallbackOpen: function() {\r\n\t\t\t// Cache option\r\n\t\t\tvar onModalOpened = this.options.onModalOpened;\r\n\r\n\t\t\tthis.debug('[callback] On Modal Opened');\r\n\r\n\t\t\tif (typeof onModalOpened === 'function') {\r\n\t\t\t\tonModalOpened.call(this.element);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When closing modal is complete\r\n\t\t */\r\n\t\tcallbackClose: function() {\r\n\t\t\t// Cache option\r\n\t\t\tvar onModalClosed = this.options.onModalClosed;\r\n\r\n\t\t\tthis.debug('[callback] On Modal Closed');\r\n\r\n\r\n\t\t\tif (typeof onModalClosed === 'function') {\r\n\t\t\t\tonModalClosed.call(this.element);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdebug: function(instruction, type) {\r\n\t\t\tif (this.options.debug) {\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase 'warn': console.warn(instruction); break;\r\n\t\t\t\t\tcase 'info': console.info(instruction); break;\r\n\t\t\t\t\tcase 'error': console.error(instruction); break;\r\n\t\t\t\t\tdefault: console.log(instruction);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t/**\r\n\t * jQuery plugin wrapper\r\n\t */\r\n\t$.fn[pluginName] = function(options) {\r\n\t\tthis.each(function() {\r\n\t\t\tif (!$.data( this, \"plugin_\" + pluginName)) {\r\n\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * Plugin options and their default values\r\n\t */\r\n\t$.fn[pluginName].defaults = {\r\n\t\tdebug: false,\r\n\t\tselectorOpen: '[data-modal-init]',\r\n\t\tselectorClose: '[data-modal-close]',\r\n\t\tselectorModal: '[data-modal-item]',\r\n\t\titemOverlay: '.dialog-overlay',\r\n\t\tclassActive: 'dialog--active',\r\n\t\toptionOverlayActive: true,\r\n\t\tonModalOpened: null,\r\n\t\tonModalClosed: null\r\n\t};\r\n\r\n})( jQuery, window, document );"],"sourceRoot":"/source/"}