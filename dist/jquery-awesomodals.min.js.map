{"version":3,"sources":["jquery.awesomodals.js"],"names":["$","window","document","undefined","Plugin","element","options","this","_name","pluginName","_defaults","fn","defaults","extend","init","prototype","buildCache","bindEvents","debug","destroy","unbindEvents","$element","removeData","$modal","plugin","on","selectorOpen","event","modalOpen","call","selectorClose","modalClose","itemOverlay","off","$link","attr","addClass","classActive","callbackOpen","removeClass","callbackClose","overlayAction","$this","optionOverlayActive","onModalOpened","onModalClosed","instruction","type","console","warn","info","error","log","each","data","selectorModal","jQuery"],"mappings":";;;;;;CAQC,SAAUA,EAAGC,EAAQC,EAAUC,GAC/B,YAOA,SAASC,GAAOC,EAASC,GACxBC,KAAKF,QAAUA,EACfE,KAAKC,MAAQC,EACbF,KAAKG,UAAYV,EAAEW,GAAGF,GAAYG,SAClCL,KAAKD,QAAUN,EAAEa,UAAYN,KAAKG,UAAWJ,GAE7CC,KAAKO,OAXN,GAAIL,GAAa,aAiBjBT,GAAEa,OAAOT,EAAOW,WAGfD,KAAM,WACLP,KAAKS,aACLT,KAAKU,aAELV,KAAKW,MAAM,UAAYX,KAAKC,MAAO,SAOpCW,QAAS,WACRZ,KAAKa,eACLb,KAAKc,SAASC,cAOfN,WAAY,WACXT,KAAKc,SAAWrB,EAAEO,KAAKF,SACvBE,KAAKgB,OAAS,MAMfN,WAAY,WACX,GAAIO,GAASjB,IAEbiB,GAAOH,SACLI,GAAG,SAAgBD,EAAOhB,MAAOgB,EAAOlB,QAAQoB,aAAc,SAASC,GACvEH,EAAOI,UAAUC,KAAKL,EAAQxB,EAAEO,SAEhCkB,GAAG,SAAgBD,EAAOhB,MAAOgB,EAAOlB,QAAQwB,cAAe,SAASH,GACxEH,EAAOO,WAAWF,KAAKL,EAAQxB,EAAEO,SAEjCkB,GAAG,QAASD,EAAOlB,QAAQ0B,YAAa,SAASL,GACjDH,EAAOO,WAAWF,KAAKL,EAAQxB,EAAEO,UAOpCa,aAAc,WACbb,KAAKc,SAASY,IAAI,IAAM1B,KAAKC,QAO9BoB,UAAW,SAASM,GACnB3B,KAAKW,MAAM,4BACXX,KAAKW,MAAM,aAAegB,EAAMC,KAAK,cAErC,IAAIZ,GAASvB,EAAEkC,EAAMC,KAAK,cAE1BZ,GAAOa,SAAS7B,KAAKD,QAAQ+B,aAC7B9B,KAAKgB,OAASA,EAKdhB,KAAK+B,gBAONP,WAAY,WACXxB,KAAKW,MAAM,6BACXX,KAAKgB,OAAOgB,YAAYhC,KAAKD,QAAQ+B,aACrC9B,KAAKgB,OAAS,KAKdhB,KAAKiC,iBAMNC,cAAe,SAASjB,EAAQkB,GAC/BnC,KAAKW,MAAM,gCAEPX,KAAKD,QAAQqC,qBAChBnB,EAAOO,WAAWF,KAAKL,EAAQkB,IAOjCJ,aAAc,WAEb,GAAIM,GAAgBrC,KAAKD,QAAQsC,aAEjCrC,MAAKW,MAAM,8BAEkB,kBAAlB0B,IACVA,EAAcf,KAAKtB,KAAKF,UAO1BmC,cAAe,WAEd,GAAIK,GAAgBtC,KAAKD,QAAQuC,aAEjCtC,MAAKW,MAAM,8BAGkB,kBAAlB2B,IACVA,EAAchB,KAAKtB,KAAKF,UAI1Ba,MAAO,SAAS4B,EAAaC,GAC5B,GAAIxC,KAAKD,QAAQY,MAChB,OAAQ6B,GACP,IAAK,OAAQC,QAAQC,KAAKH,EAAc,MACxC,KAAK,OAAQE,QAAQE,KAAKJ,EAAc,MACxC,KAAK,QAASE,QAAQG,MAAML,EAAc,MAC1C,SAASE,QAAQI,IAAIN,OAUzB9C,EAAEW,GAAGF,GAAc,SAASH,GAM3B,MALAC,MAAK8C,KAAK,WACJrD,EAAEsD,KAAM/C,KAAM,UAAYE,IAC9BT,EAAEsD,KAAM/C,KAAM,UAAYE,EAAY,GAAIL,GAAQG,KAAMD,MAGnDC,MAMRP,EAAEW,GAAGF,GAAYG,UAChBM,OAAO,EACPQ,aAAc,oBACdI,cAAe,qBACfyB,cAAe,oBACfvB,YAAa,kBACbK,YAAa,iBACbM,qBAAqB,EACrBC,cAAe,KACfC,cAAe,OAGbW,OAAQvD,OAAQC","file":"jquery-awesomodals.min.js","sourcesContent":["/*!\n * Simple collapse/spoilers system\n * Version : 1.0\n * Emmanuel B. (www.emmanuelbeziat.com)\n * https://github.com/EmmanuelBeziat/jquery-spoilers\n **/\n\n\n;(function($, window, document, undefined) {\n\t'use strict';\n\n\tvar pluginName = 'awesomodals';\n\n\t/**\n\t * Constructor\n\t */\n\tfunction Plugin(element, options) {\n\t\tthis.element = element;\n\t\tthis._name = pluginName;\n\t\tthis._defaults = $.fn[pluginName].defaults;\n\t\tthis.options = $.extend( {}, this._defaults, options );\n\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Methods\n\t */\n\t$.extend(Plugin.prototype, {\n\n\t\t// Initialization logic\n\t\tinit: function() {\n\t\t\tthis.buildCache();\n\t\t\tthis.bindEvents();\n\n\t\t\tthis.debug('[init] ' + this._name, 'info');\n\t\t},\n\n\t\t/**\n\t\t * Remove plugin instance\n\t\t * Example: $('selector').data('tabs').destroy();\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis.unbindEvents();\n\t\t\tthis.$element.removeData();\n\t\t},\n\n\t\t/**\n\t\t * Create variables that can be accessed by other functions\n\t\t * Useful for DOM performances\n\t\t */\n\t\tbuildCache: function() {\n\t\t\tthis.$element = $(this.element);\n\t\t\tthis.$modal = null;\n\t\t},\n\n\t\t/**\n\t\t * Attach actions to events\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar plugin = this;\n\n\t\t\tplugin.$element\n\t\t\t\t.on('click' + '.' + plugin._name, plugin.options.selectorOpen, function(event) {\n\t\t\t\t\tplugin.modalOpen.call(plugin, $(this));\n\t\t\t\t})\n\t\t\t\t.on('click' + '.' + plugin._name, plugin.options.selectorClose, function(event) {\n\t\t\t\t\tplugin.modalClose.call(plugin, $(this));\n\t\t\t\t})\n\t\t\t\t.on('click', plugin.options.itemOverlay, function(event) {\n\t\t\t\t\tplugin.modalClose.call(plugin, $(this));\n\t\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Remove actions from events\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tthis.$element.off('.' + this._name);\n\t\t},\n\n\t\t/**\n\t\t * Open modal method\n\t\t * Call callback on complete\n\t\t */\n\t\tmodalOpen: function($link) {\n\t\t\tthis.debug('[action] Open modal call');\n\t\t\tthis.debug('Modal ID: ' + $link.attr('data-modal'));\n\n\t\t\tvar $modal = $($link.attr('data-modal'));\n\n\t\t\t$modal.addClass(this.options.classActive);\n\t\t\tthis.$modal = $modal;\n\n\t\t\t/**\n\t\t\t * Allow callback after open\n\t\t\t */\n\t\t\tthis.callbackOpen();\n\t\t},\n\n\t\t/**\n\t\t * Close modal method\n\t\t * Call callback on complete\n\t\t */\n\t\tmodalClose: function() {\n\t\t\tthis.debug('[action] Close modal call');\n\t\t\tthis.$modal.removeClass(this.options.classActive);\n\t\t\tthis.$modal = null;\n\n\t\t\t/**\n\t\t\t * Allow callback after close\n\t\t\t */\n\t\t\tthis.callbackClose();\n\t\t},\n\n\t\t/**\n\t\t * Ger the action on overlay click\n\t\t */\n\t\toverlayAction: function(plugin, $this) {\n\t\t\tthis.debug('[action] Overlay method call');\n\n\t\t\tif (this.options.optionOverlayActive) {\n\t\t\t\tplugin.modalClose.call(plugin, $this);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When opening modal is complete\n\t\t */\n\t\tcallbackOpen: function() {\n\t\t\t// Cache option\n\t\t\tvar onModalOpened = this.options.onModalOpened;\n\n\t\t\tthis.debug('[callback] On Modal Opened');\n\n\t\t\tif (typeof onModalOpened === 'function') {\n\t\t\t\tonModalOpened.call(this.element);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When closing modal is complete\n\t\t */\n\t\tcallbackClose: function() {\n\t\t\t// Cache option\n\t\t\tvar onModalClosed = this.options.onModalClosed;\n\n\t\t\tthis.debug('[callback] On Modal Closed');\n\n\n\t\t\tif (typeof onModalClosed === 'function') {\n\t\t\t\tonModalClosed.call(this.element);\n\t\t\t}\n\t\t},\n\n\t\tdebug: function(instruction, type) {\n\t\t\tif (this.options.debug) {\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'warn': console.warn(instruction); break;\n\t\t\t\t\tcase 'info': console.info(instruction); break;\n\t\t\t\t\tcase 'error': console.error(instruction); break;\n\t\t\t\t\tdefault: console.log(instruction);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\t/**\n\t * jQuery plugin wrapper\n\t */\n\t$.fn[pluginName] = function(options) {\n\t\tthis.each(function() {\n\t\t\tif (!$.data( this, \"plugin_\" + pluginName)) {\n\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t};\n\n\t/**\n\t * Plugin options and their default values\n\t */\n\t$.fn[pluginName].defaults = {\n\t\tdebug: false,\n\t\tselectorOpen: '[data-modal-init]',\n\t\tselectorClose: '[data-modal-close]',\n\t\tselectorModal: '[data-modal-item]',\n\t\titemOverlay: '.dialog-overlay',\n\t\tclassActive: 'dialog--active',\n\t\toptionOverlayActive: true,\n\t\tonModalOpened: null,\n\t\tonModalClosed: null\n\t};\n\n})( jQuery, window, document );"],"sourceRoot":"/source/"}